__git_ps1 () 
{ 
    local b="$(git symbolic-ref HEAD 2>/dev/null)";
    if [ -n "$b" ]; then
        printf " (%s)" "${b##refs/heads/}";
    fi
}


#export PS1="\[$Blue\][ \t ] \[${BOLD}${BIRed}\]\u \[$Cyan\]in \[$GREEN\]\w\[$Cyan\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")\[$PURPLE\]\$(parse_git_branch)\[$Green\]\n â†’ \[$RESET\]"
#export PS2="\[$WHITE\]\[$RESET\]"

# Parse git for clean dir
function parse_git_dirty {
[[ "$(git status 2> /dev/null | tail -n1)" != "nothing to commit (working directory clean)" ]] && echo "*"
}

# To display git branch
function parse_git_branch {
git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/[\1$(parse_git_dirty)]/"
}
 
if [[ ${EUID} == 0 ]] ; then
PS1='\[\033[01;31m\]\u@\h \[\033[01;34m\]\w\[\033[01;35m\]$(parse_git_branch)\[\033[01;34m\] \$ \[\033[00m\]'
else
PS1='\[\033[01;00m\]\w\[\033[00;33m\]$(parse_git_branch)\[\033[00m\] \$ '
fi

export HISTFILESIZE=10000
export HISTSIZE=10000

#Multiple shells may overwrite each others' history.
#This fixes that.
shopt -s histappend

#Make shells write to history immediately.
#Normally they write only on exit.
export PROMPT_COMMAND='history -a'

#Set up text editing/viewing.
export LANG=en_US.utf-8
export CLICOLOR=1 #Colorizes output of ls and others.
export EDITOR=vim
export VISUAL=$EDITOR
export PAGER=less

# Allow <C-s> to pass through to shell and programs
stty -ixon -ixoff
